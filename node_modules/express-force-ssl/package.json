{
  "author": {
    "name": "Jeremy Battle",
    "email": "@complexcarb",
    "url": "http://jeremybattle.com"
  },
  "name": "express-force-ssl",
  "description": "Force SSL on particular/all pages in Express",
  "version": "0.2.3",
  "homepage": "http://github.com/battlejj/express-force-ssl",
  "repository": {
    "type": "git",
    "url": "git://github.com/battlejj/express-force-ssl.git"
  },
  "contributors": [
    {
      "name": "Jeremy Battle",
      "email": "battlejj@gmail.com"
    },
    {
      "name": "Tim Shadel"
    }
  ],
  "keywords": [
    "ssl",
    "secure",
    "https",
    "tls",
    "middleware",
    "cert",
    "require",
    "express"
  ],
  "dependencies": {},
  "main": "index",
  "bugs": {
    "url": "http://github.com/battlejj/express-force-ssl/issues"
  },
  "scripts": {},
  "engines": {
    "node": ">=0.2.2"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/battlejj/express-force-ssl/raw/master/LICENSE"
    }
  ],
  "readme": "express-force-ssl\n=================\nExtremely simple middleware for requiring some or all pages\nto be visited over SSL.\n\n\n####Installation\n````\n$ npm install express-force-ssl\n````\n\n\n####Examples\n######Force SSL on all pages\n```javascript\nvar express = require('express');\nvar forceSSL = require('express-force-ssl');\nvar fs = require('fs');\nvar http = require('http');\nvar https = require('https');\n\nvar ssl_options = {\n  key: fs.readFileSync('./keys/private.key')\n  cert: fs.readFileSync('./keys/cert.crt')\n  ca: fs.readFileSync('./keys/intermediate.crt')\n};\n\nvar app = express();\nvar server = http.createServer(app);\nvar secureServer = https.createServer(ssl_options, app);\n\napp.use(express.bodyParser());\napp.use(forceSSL);\napp.use(app.router);\n\nsecureServer.listen(443)\nserver.listen(80)\n\n```\n\n######Only certain pages SSL\n```javascript\nvar express = require('express');\nvar forceSSL = require('express-force-ssl');\nvar fs = require('fs');\nvar http = require('http');\nvar https = require('https');\n\nvar ssl_options = {\n  key: fs.readFileSync('./keys/private.key')\n  cert: fs.readFileSync('./keys/cert.crt')\n  ca: fs.readFileSync('./keys/intermediate.crt')\n};\n\nvar app = express();\n\nvar server = http.createServer(app);\nvar secureServer = https.createServer(options, app);\n\napp.use(express.bodyParser());\napp.use(app.router);\n\napp.get('/', somePublicFunction);\napp.get('/user/:name', somePublicFunction);\napp.get('/login', forceSSL, someSecureFunction);\napp.get('/logout', forceSSL, someSecureFunction);\n\nsecureServer.listen(443)\nserver.listen(80)\n```\n\n######Custom Server Port Support\nIf your server isn't listening on 80/443 respectively, you can change this pretty simply. \n\n```javascript\n\nvar app = express();\napp.set('httpsPort', 8443);\n\nvar server = http.createServer(app);\nvar secureServer = https.createServer(options, app);\n\n...\n\nsecureServer.listen(443)\nserver.listen(80)\n\n```\n\n\n###Change Log\n#####v0.2.3 - Update README\n\n#####v0.2.2 - Redirect now gives a 301 permanent redirection HTTP Status Code\nCourtesy of @tixz \n\n#####v0.2.0 - Added support for ports other than 80/443 for non-secure/secure ports.\nFor example, if you host your non-ssl site on port 8080 and your secure site on 8443, version 0.1.x did not support it.\nNow, out of the box your non-ssl site port will be recognized, and to specify a port other than 443 for your ssl port\nyou just have to add a setting in your express config like so:\n````javascript\napp.set('httpsPort', 8443);\n````\nand the plugin will check for it and use it. Defaults to 443 of course.\n\n#####v0.1.1 - Bug fix\nCurteousy of @timshadel\n",
  "readmeFilename": "README.md",
  "_id": "express-force-ssl@0.2.3",
  "dist": {
    "shasum": "ba7e8eaaa4242c4f831cf88dda760667180a0e89"
  },
  "_from": "express-force-ssl@",
  "_resolved": "https://registry.npmjs.org/express-force-ssl/-/express-force-ssl-0.2.3.tgz"
}
